{"version":3,"sources":["ThreeItemsWidget/styles.js","ThreeItemsWidget/utils/makeItemsArr.js","ThreeItemsWidget/utils/isDataEqual.js","ThreeItemsWidget/components/Modal/styles.js","ThreeItemsWidget/views/SelectedItems/styles.js","ThreeItemsWidget/views/SelectedItems/SelectedItems.js","ThreeItemsWidget/views/SelectedItems/index.js","ThreeItemsWidget/components/Selector/styles.js","ThreeItemsWidget/components/Selector/Selector.js","ThreeItemsWidget/components/Selector/index.js","ThreeItemsWidget/constants/filterValues.js","ThreeItemsWidget/components/Modal/Modal.js","ThreeItemsWidget/components/Modal/index.js","ThreeItemsWidget/ThreeItemsWidget.js","ThreeItemsWidget/index.js","App.js","reportWebVitals.js","index.js"],"names":["stylesObject","theme","_container","display","flexDirection","alignItems","border","borderRadius","padding","maxWidth","_button_area","justifyContent","makeItemArr","length","mask","i","arr","push","isDataEqual","data1","data2","JSON","stringify","_all_area","width","height","position","top","left","_paper","zIndex","_backDrop","_label","paddingBottom","cursor","opacity","_filters","_scroll_area","_item","backgroundColor","_buttons","_selected_items","textAlign","fontSize","_items_row","minHeight","marginRight","useStyles","makeStyles","SelectedItems","items","updateElements","main","useState","chosenElements","setChosenElements","useEffect","className","t","selected_items","map","el","onClick","element","filter","_filter","Selector","onSelect","selected","data","FormControl","variant","Select","labelId","id","value","onChange","e","target","v","MenuItem","no_filter","style","filterValues","Row","memo","index","elements","chooseElement","updatedElements","checked","includes","FormControlLabel","control","Checkbox","disabled","color","label","areEqual","createItemData","memoize","getElements","search","memoElements","trim","replace","Modal","close","saveElements","setFilter","setSearch","setUpdatedElements","itemData","item","createPortal","Backdrop","open","Paper","elevation","dialog_title","TextField","itemCount","itemSize","Button","cancel","save","document","getElementById","LS_CHOSEN_ELEMENTS","ThreeItemsWidget","ready","setReady","setElements","openModal","setOpenModal","elementsFromLS","localStorage","getItem","parse","setItem","change","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ada33cd7.chunk.js","sourcesContent":["const stylesObject = (theme) => ({\r\n    _container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        border: '1px solid gainsboro',\r\n        borderRadius: 6,\r\n        padding: 20,\r\n        maxWidth: 'max-content'\r\n    },\r\n    _button_area: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start'\r\n    }\r\n});\r\n\r\nexport default stylesObject\r\n","const makeItemArr = (length, mask = (i) => i) => {\r\n    const arr = [];\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        arr.push(mask(i))\r\n    }\r\n\r\n    return arr\r\n}\r\n\r\nexport default makeItemArr\r\n","const isDataEqual = (data1, data2) => {\r\n    return JSON.stringify(data1) === JSON.stringify(data2)\r\n};\r\n\r\nexport default isDataEqual\r\n","const stylesObject = (theme) => ({\r\n    _all_area: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0\r\n    },\r\n    _paper: {\r\n        width: 600,\r\n        padding: 20,\r\n        zIndex: 150,\r\n    },\r\n    _backDrop: {\r\n        zIndex: 100\r\n    },\r\n    _label: {\r\n        paddingBottom: 16,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        '& > svg': {\r\n            cursor: 'pointer',\r\n            '&:hover': {\r\n                opacity: 0.6\r\n            }\r\n        }\r\n    },\r\n    _filters: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingBottom: 16\r\n    },\r\n    _scroll_area: {\r\n        paddingBottom: 16,\r\n    },\r\n    _item: {\r\n        width: 210,\r\n        height: 32,\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        padding: 4,\r\n        backgroundColor: '#d1d1d1'\r\n    },\r\n    _buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n});\r\n\r\nexport default stylesObject\r\n","const stylesObject = (theme) => ({\r\n    _selected_items: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        paddingBottom: 16\r\n    },\r\n    _label: {\r\n        textAlign: 'left',\r\n        fontSize: 18,\r\n        paddingBottom: 10\r\n    },\r\n    _items_row: {\r\n        minHeight: 32,\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    _item: {\r\n        backgroundColor: '#ececec',\r\n        marginRight: 10,\r\n        height: 32,\r\n        width: 180,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: 4,\r\n        '& > svg': {\r\n            cursor: 'pointer',\r\n            '&:hover': {\r\n                opacity: 0.6\r\n            }\r\n        },\r\n        '&:last-child': {\r\n            marginRight: 0\r\n        }\r\n    }\r\n});\r\n\r\nexport default stylesObject\r\n","import React, {useEffect, useState} from 'react';\r\nimport stylesObject from './styles';\r\nimport t from '../../constants/translations.json';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\n\r\nconst useStyles = makeStyles(stylesObject);\r\n\r\nexport default function SelectedItems({items = [], main, updateElements})  {\r\n    const {_selected_items, _label, _items_row, _item} = useStyles()\r\n    const [chosenElements, setChosenElements ] = useState(items)\r\n\r\n    useEffect(() => {\r\n       //console.log('update items', items, main)\r\n        setChosenElements(items)\r\n    },[items])\r\n\r\n    const deleteItem = (element) => {\r\n        updateElements(chosenElements.filter(el => el !== element))\r\n    };\r\n\r\n    return (\r\n        <div className={_selected_items}>\r\n            <div className={_label}>{t.selected_items}</div>\r\n            <div className={_items_row}>\r\n                {\r\n                    chosenElements.length === 0 ? <SentimentVeryDissatisfiedIcon/> :\r\n                    chosenElements.map(el => (\r\n                        <div key={`${el}`} className={_item}>\r\n                            {el}\r\n                            <CloseIcon\r\n                                //style={{cursor: 'pointer'}}\r\n                                onClick={() => deleteItem(el)}\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import SelectedItems from \"./SelectedItems\";\r\n\r\nexport default SelectedItems\r\n","const stylesObject = (theme) => ({\r\n    _filter: {\r\n        width: 210\r\n    }\r\n});\r\n\r\nexport default stylesObject\r\n","import React from 'react';\r\nimport {FormControl, Select, MenuItem} from '@material-ui/core';\r\nimport t from '../../constants/translations.json';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport stylesObject from \"./styles\";\r\n\r\nconst useStyles = makeStyles(stylesObject);\r\n\r\nconst Selector = ({onSelect, selected, data}) => {\r\n    const {_filter} = useStyles();\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={_filter}>\r\n            <Select\r\n                className={''}\r\n                labelId=\"filter\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={selected}\r\n                onChange={e => onSelect(e.target.value)}\r\n            >\r\n                {\r\n                    data.map(v => (\r\n                        <MenuItem key={v} value={v}>\r\n                            {v === t.no_filter ? <em style={{opacity: 0.5}}>{v}</em> : v}\r\n                        </MenuItem>\r\n                        )\r\n                    )\r\n                }\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default Selector\r\n","import Selector from \"./Selector\";\r\n\r\nexport default Selector;\r\n","import t from './translations.json';\r\nconst filterValues = [\r\n    t.no_filter,\r\n    '>10',\r\n    '>100',\r\n    '>200',\r\n    '>300',\r\n    '>400',\r\n    '>500',\r\n    '>600',\r\n    '>700',\r\n    '>800',\r\n    '>900',\r\n];\r\n\r\nexport default filterValues;\r\n","import {createPortal} from 'react-dom'\r\nimport React, {useState, memo} from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {Paper, Backdrop, Button, TextField, Checkbox, FormControlLabel} from '@material-ui/core';\r\nimport t from '../../constants/translations.json';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport stylesObject from \"./styles\";\r\nimport SelectedItems from \"../../views/SelectedItems\";\r\nimport Selector from \"../Selector\";\r\nimport filterValues from \"../../constants/filterValues\";\r\n\r\nimport { FixedSizeList as List, areEqual } from 'react-window';\r\nimport memoize from 'memoize-one';\r\nimport {isDataEqual} from \"../../utils\";\r\n\r\nconst useStyles = makeStyles(stylesObject);\r\n\r\nconst Modal = ({close, elements, chosenElements, saveElements}) => {\r\n    const {_all_area, _paper, _backDrop, _label, _filters, _item, _scroll_area, _buttons} = useStyles()\r\n    const [filter, setFilter] = useState(t.no_filter)\r\n    const [search, setSearch] = useState('')\r\n    const [updatedElements, setUpdatedElements] = useState(chosenElements)\r\n\r\n    const {memoElements} = getElements(elements, search, filter)\r\n\r\n    const chooseElement = (item) => {\r\n        if (updatedElements.includes(item)) {\r\n            setUpdatedElements(updatedElements.filter(el => el !== item))\r\n        } else {\r\n            setUpdatedElements([...updatedElements, item])\r\n        }\r\n    }\r\n\r\n    const itemData = createItemData(memoElements, updatedElements, chooseElement, _item);\r\n\r\n    const save = () => {\r\n        saveElements(updatedElements);\r\n        close()\r\n    }\r\n    //console.log(updatedElements)\r\n    return createPortal(\r\n        <div className={_all_area}>\r\n            <Backdrop open={true} className={_backDrop} onClick={close}/>\r\n            <Paper elevation={3} className={_paper}>\r\n                <div className={_label}>\r\n                    {t.dialog_title}\r\n                    <CloseIcon style={{cursor: 'pointer'}} onClick={close}/>\r\n                </div>\r\n                <div className={_filters}>\r\n                    <TextField id=\"outlined-basic\" label={t.search} variant=\"outlined\" value={search} onChange={e => setSearch(e.target.value)}/>\r\n                    <Selector onSelect={v => setFilter(v)} selected={filter} data={filterValues}/>\r\n                </div>\r\n                <div className={_scroll_area}>\r\n                    <List\r\n                        height={300}\r\n                        itemCount={memoElements.length}\r\n                        itemSize={44}\r\n                        itemData={itemData}\r\n                    >\r\n                        {Row}\r\n                    </List>\r\n                </div>\r\n                <SelectedItems items={updatedElements} updateElements={arr => setUpdatedElements(arr)}/>\r\n                <div className={_buttons}>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={close}>{t.cancel}</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={save} disabled={isDataEqual(updatedElements, chosenElements)}>{t.save}</Button>\r\n                </div>\r\n            </Paper>\r\n        </div>,\r\n        document.getElementById('body')\r\n    )\r\n}\r\n\r\nconst Row = memo(({data, index, style }) => {\r\n    const {elements, _item, chooseElement, updatedElements} = data;\r\n    const el = elements[index];\r\n    const checked = updatedElements.includes(el);\r\n\r\n    return <div style={{...style, display: 'flex', alignItems: 'center', justifyContent: 'flex-start'}}>\r\n        <FormControlLabel\r\n            className={_item}\r\n            control={\r\n                <Checkbox checked={checked}\r\n                          onChange={e => chooseElement(el)}\r\n                          disabled={updatedElements.length === 3 && !checked}\r\n                          color=\"primary\"/>\r\n            }\r\n            label={el}\r\n        />\r\n    </div>\r\n}, areEqual );\r\n\r\nconst createItemData = memoize((elements, updatedElements, chooseElement, _item) => ({\r\n    elements,\r\n    updatedElements,\r\n    chooseElement,\r\n    _item\r\n}));\r\n\r\nconst getElements = memoize((elements, search, filter) => ({\r\n        memoElements: elements.filter((v, i) => v.includes(search.trim()) && (filter === t.no_filter ? v : (i+1) > +filter.replace(/>/gmi, '')))\r\n    })\r\n)\r\n\r\n\r\nexport default Modal\r\n","import Modal from \"./Modal\";\r\n\r\nexport default Modal;\r\n","import React, {useEffect, useState} from 'react';\r\nimport stylesObject from './styles';\r\nimport {Button} from \"@material-ui/core\";\r\nimport t from './constants/translations.json';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {makeItemArr} from \"./utils\";\r\nimport Modal from \"./components/Modal\";\r\nimport SelectedItems from \"./views/SelectedItems\";\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\n\r\nconst useStyles = makeStyles(stylesObject);\r\nconst LS_CHOSEN_ELEMENTS = 'chosenElements';\r\n\r\nexport default function ThreeItemsWidget()  {\r\n    const {_container, _button_area} = useStyles()\r\n    const [ready, setReady] = useState(false)\r\n    const [chosenElements, setChosenElements ] = useState([])\r\n    const [elements, setElements ] = useState([])\r\n    const [openModal, setOpenModal ] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let elementsFromLS = localStorage.getItem(LS_CHOSEN_ELEMENTS);\r\n        if (elementsFromLS !== null) {\r\n            //console.log('PARSE')\r\n            setChosenElements(JSON.parse(elementsFromLS))\r\n        }\r\n        setReady(true)\r\n        const elements = makeItemArr(1000, i => `Item ${i+1}`);\r\n        setElements(elements)\r\n\r\n        //console.log('mount')\r\n    },[])\r\n\r\n    const updateElements = (arr) => {\r\n        setChosenElements(arr);\r\n        localStorage.setItem(LS_CHOSEN_ELEMENTS, JSON.stringify(arr));\r\n    }\r\n\r\n    return !ready ? null : (\r\n        <div className={_container}>\r\n            <SelectedItems items={chosenElements} main={'main'} updateElements={updateElements}/>\r\n            <div className={_button_area}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => setOpenModal(!openModal)}>\r\n                    {t.change}\r\n                </Button>\r\n                {\r\n                    chosenElements.length === 0 ? null :\r\n                        <SentimentVerySatisfiedIcon/>\r\n                }\r\n            </div>\r\n\r\n            {\r\n                !openModal ? null :\r\n                    <Modal close={() => setOpenModal(!openModal)}\r\n                           elements={elements}\r\n                           chosenElements={chosenElements}\r\n                           saveElements={updateElements}\r\n                    />\r\n            }\r\n        </div>\r\n    )\r\n};\r\n","import ThreeItemsWidget from \"./ThreeItemsWidget\";\r\n\r\nexport default ThreeItemsWidget;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport ThreeItemsWidget from \"./ThreeItemsWidget\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ThreeItemsWidget/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}